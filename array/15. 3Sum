## 15. 3Sum
### Description

Given an integer array nums, return all the triplets [nums[i], nums[j], nums[k]] such that i != j, i != k, and j != k, and nums[i] + nums[j] + nums[k] == 0.

Notice that the solution set must not contain duplicate triplets.

###Analyse
此题是Two sum的变种，我们可以通过固定

### Code
```java
class Solution {
    public int[] sortArrayByParity(int[] nums) {
        int left = 0;
        int right = nums.length - 1;
        int temp = 0;
        while (left < right){
            if(nums[left]%2 == 1 && nums[right]%2 == 0){
                temp = nums[left];
                nums[left] = nums[right];
                nums[right] = temp;
                left++;
                right--;
            }
            else if(nums[left] %2 == 0){
                left ++;
            }
            else if(nums[right] %2 == 1){
                right --;
            }
        }
        return nums;
    }
}
```
